{"version":3,"sources":["Config.js","Request/Request.js","Context.js","components/layouts/Header.jsx","components/layouts/Footer.jsx","components/Homepage/Homepage.jsx","components/IndexPage.jsx","components/layouts/TextInputGroup.jsx","components/Register/Register.js","components/Login/Login.js","components/layouts/LoggedInHeader.jsx","components/Microphone/Microphone.jsx","components/layouts/LeftSideBar.jsx","components/Dashboard/AdminDashboard.jsx","components/Dashboard/StudentDashboard.jsx","components/Dashboard/LecturerDashboard.jsx","components/Message/Messages.jsx","Main.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","Request","url","post","bodyMessage","Promise","resolve","reject","request","XMLHttpRequest","open","addEventListener","event","status","readyState","responseText","onerror","error","statusText","setRequestHeader","send","get","this","Context","React","createContext","reducer","state","action","payload","type","admins","students","lecturers","userType","localStorage","setItem","JSON","stringify","data","Provider","courses","notifications","lectures","isAuthenticated","dispatch","setState","fetchAllAdmins","a","res","parse","fetchAllStudents","fetchAllLecturers","setInterval","value","props","children","Component","Consumer","Header","branding","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","defaultProps","Footer","Date","getFullYear","Homepage","style","fontSize","fontWeight","fontFamily","class","data-ride","role","data-slide","aria-hidden","background","opacity","IndexPage","TextInputGroup","name","label","placeholder","onChange","classnames","Register","email","username","matric","password","registerationFailed","isRegistered","errors","redirect","onChangeHandler","e","target","clearAlert","setTimeout","postUser","user","axios","onSubmitHandler","preventDefault","matricNumber","onSubmit","bind","borderBottom","color","padding","defaultValue","Login","loginFailed","errorMessage","login","LoggedInHeader","Microphone","LeftSideBar","isClicked","handleToggle","window","document","getElementById","onClick","map","each","page","AdminDashboard","StudentDashboard","LecturerDashboard","Messages","Main","exact","path","component","App","getItem","alert","console","log","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7492bb5e.chunk.js","sourcesContent":["export const BASE_URL = \"http://localhost:4000\"","export default class Request {\r\n  //constructor\r\n  constructor(url){\r\n    this.url = `http://localhost:4000/${url}`\r\n  }\r\n\r\n  post = (bodyMessage)=>{\r\n    return new Promise((resolve,reject)=>{\r\n      const request = new XMLHttpRequest()\r\n      request.open(\"POST\",this.url,true)\r\n\r\n      request.addEventListener(\"readystatechange\",(event)=>{\r\n        if(request.status === 200 && request.readyState === 4){\r\n          resolve(request.responseText)\r\n        }\r\n      })\r\n    request.onerror = (error)=>{\r\n      reject({\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        error: error\r\n      })\r\n    }\r\n    request.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\")\r\n    request.send(bodyMessage)\r\n    })\r\n  }\r\n\r\n  get = ()=>{\r\n    return new Promise((resolve,reject)=>{\r\n      const request = new XMLHttpRequest()\r\n      const url = `${this.url}`\r\n      request.open(\"GET\",url,true)\r\n\r\n      request.addEventListener(\"readystatechange\",(event)=>{\r\n        if(request.status === 200 && request.readyState === 4){\r\n          resolve(request.responseText)\r\n        }\r\n      })\r\n    request.onerror = (error)=>{\r\n      reject({\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        error: error\r\n      })\r\n    }\r\n    request.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\")\r\n    request.send()\r\n    })\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport axios from \"axios\"\r\nimport { BASE_URL } from \"./Config.js\"\r\nimport Request from './Request/Request'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = ( state, action ) => {\r\n    const { payload, type } = action;\r\n    const { admins, students, lecturers } = state;\r\n\r\n    switch(type){\r\n        case \"LOGIN_USER\":\r\n            if (payload.userType === \"1\"){\r\n                localStorage.setItem('l-token',JSON.stringify(payload.data))\r\n            }else{\r\n                localStorage.setItem('s-token',JSON.stringify(payload.data))\r\n            }\r\n        case \"REGISTER_STUDENT\":\r\n            return {\r\n                ...state,\r\n                admins: [payload,...admins]\r\n            }\r\n        case \"REGISTER_LECTURER\":\r\n            return {\r\n                ...state,\r\n                admins: [payload,...admins]\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n} \r\n\r\nexport class Provider extends Component {\r\n    \r\n    state = {\r\n        admins:[{}],\r\n        students: [{}],\r\n        lecturers: [{}],\r\n        courses: [{}],\r\n        notifications: [{}],\r\n        lectures: [{}],\r\n        isAuthenticated: false,\r\n        dispatch: (action) => this.setState((state) => reducer(state,action))\r\n        \r\n    }\r\n\r\n\r\n    fetchAllAdmins = async () => {\r\n\r\n        const request = new Request('admins');\r\n        const res = await request.get();\r\n\r\n        this.setState({ admins: JSON.parse(res) })\r\n        \r\n    }\r\n\r\n    fetchAllStudents = async () => {\r\n\r\n        const request = new Request('students');\r\n        const res = await request.get();\r\n\r\n        this.setState({ students: JSON.parse(res) })\r\n        \r\n    }\r\n\r\n    fetchAllLecturers = async () => {\r\n\r\n        const request = new Request('lecturers');\r\n        const res = await request.get();\r\n\r\n        this.setState({ lecturers: JSON.parse(res) })\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        setInterval(() => {\r\n            this.fetchAllAdmins();\r\n            this.fetchAllLecturers();\r\n            this.fetchAllStudents();\r\n\r\n        }, 2000)\r\n        \r\n    }\r\n    \r\n    render() {\r\n              \r\n        return (\r\n            <Context.Provider value = {this.state}>\r\n                \r\n                { this.props.children }\r\n\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Header.css\"\r\n\r\nconst Header = (props) => {\r\n  \r\n  const { branding } = props;\r\n  \r\n  return (\r\n\t<nav \r\n\t\tclassName=\"app-navbar navbar navbar-expand-lg navbar-dark static-top mb-5 shadow\">\r\n\t\t<div className=\"container app-container\">\r\n\t\t\t<a className=\"navbar-brand\" href=\"#\">\r\n\t\t\t\t\r\n\t\t\t\t<span className = \"v-logo\">V</span> \r\n\t\t\t\t{branding}\r\n\t\t\t\t\r\n\t\t\t\t</a>\r\n\r\n\t\t\t\t\r\n\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t</button>\r\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n\t\t\t<ul className=\"navbar-nav ml-auto text-white\">\r\n\t\t\t\t<li className=\"nav-item active\">\r\n\t\t\t\t<Link to = \"/home\"><a className=\"nav-link\" href=\"#\">Home\r\n\t\t\t\t\t<span className=\"sr-only\">(current)</span>\r\n\t\t\t\t</a>\r\n\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t<Link to = \"/register\"><a className=\"nav-link\" href=\"#\">Register</a>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t\r\n\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t<Link to = \"/login\"><a className=\"nav-link\" href=\"#\">Login</a></Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t\r\n\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n</nav>\r\n\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n\tbranding: \"My App\"\r\n}\r\n\r\nHeader.propTypes = {\r\n\tbranding: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <>\r\n        <footer className = \"app-footer container-fluid\">\r\n            <p className = \"text-white\">\r\n                &copy; Copyright {new Date().getFullYear()} Odekunle Oluwatobi Alao\r\n            </p>\r\n        </footer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./Homepage.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Homepage() {\r\n  return (\r\n    <>\r\n        \r\n        <div className=\"card-container container-fluid\">\r\n            <div className=\"app-card card border-0 shadow my-5\">\r\n                <div className=\"app-card-body card-body text-center p-4 text-white\">\r\n                    \r\n                    <span style = {{ fontSize: \"55px\", fontWeight: \"bolder\", fontFamily: \"Segoe UI\" }}>VIBEHEAR</span>\r\n                    \r\n                    <p \r\n                      style = {{ fontSize: \"30px\", fontWeight: \"bold\", fontFamily: \"Segoe UI\" }}\r\n                      className=\"lead mt-2\">A Virtual Classroom for Deaf & Dumb.</p>\r\n                    <div class=\"container\">\r\n                      <div id=\"carouselContent\" class=\"carousel slide\" data-ride=\"carousel\">\r\n                          <div class=\"carousel-inner\" role=\"listbox\">\r\n                              <div class=\"carousel-item text-center p-4\">\r\n                                  <p>Now, a deaf and dumb can talk! Asking of quetions in a classroom now made easy</p>\r\n                              </div>\r\n                              <div class=\"carousel-item active text-center p-4\">\r\n                                  <p>It ensures effficient communication between Lecturer and (Deaf and Dumb)</p>\r\n                              </div>\r\n                              <div class=\"carousel-item text-center p-4\">\r\n                                  <p>It transcribes the speech of the lecturer to a readable text</p>\r\n                              </div>\r\n                              <div class=\"carousel-item text-center p-4\">\r\n                                  <p>It can be used as a note-taking app</p>\r\n                              </div>\r\n                              <div class=\"carousel-item text-center p-4\">\r\n                                  <p>It eases the classroom learning effort for the deaf and dumb.</p>\r\n                              </div>\r\n                              <div class=\"carousel-item text-center p-4\">\r\n                                  <p>It provides a better user interface that is more friendly for the deaf and dumb.</p>\r\n                              </div>\r\n                              <div class=\"carousel-item text-center p-4\">\r\n                                  <p>Download a class lecture as PDF.</p>\r\n                              </div>\r\n                          </div>\r\n                          <a class=\"carousel-control-prev\" href=\"#carouselContent\" role=\"button\" data-slide=\"prev\">\r\n                              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                              <span class=\"sr-only\">Previous</span>\r\n                          </a>\r\n                          <a class=\"carousel-control-next\" href=\"#carouselContent\" role=\"button\" data-slide=\"next\">\r\n                              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                              <span class=\"sr-only\">Next</span>\r\n                          </a>\r\n                      </div>\r\n                  </div>\r\n                  <br/><br/>\r\n                    <Link to = \"/register\"><button\r\n                    style = {{ background: \"red\", opacity: \"0.9\" }} \r\n                    className=\"btn btn-lg bg-teal text-white\"\r\n                    \r\n                    >Register</button></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n       \r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"./layouts/Header\";\r\nimport Footer from \"./layouts/Footer\";\r\nimport Homepage from \"./Homepage/Homepage\"\r\n\r\n\r\n\r\nexport default class IndexPage extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Header branding = \"ibeHear\" />\r\n          <div className = \"container\">\r\n            <Homepage />\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from \"classnames\"\r\n\r\nexport default function TextInputGroup({\r\n    name,\r\n    label,\r\n    value,\r\n    placeholder,\r\n    onChange,\r\n    type,\r\n    error\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n        \r\n        <input \r\n            type={type} \r\n            className= {\r\n                classnames(\"form-control form-control-sm\",\r\n                {\r\n                    \"is-invalid\": error\r\n                }\r\n            )}\r\n            placeholder= {placeholder}\r\n            name = {name}\r\n            value = {value}\r\n            onChange = {onChange}\r\n            error = {error}\r\n            />\r\n        { error && (\r\n                <div className=\"invalid-feedback\">{error}</div>\r\n            )\r\n        }\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired,\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: \"text\"\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./Register.css\"\r\nimport Header from \"../layouts/Header\"\r\nimport Footer from \"../layouts/Footer\"\r\nimport TextInputGroup from \"../layouts/TextInputGroup\"\r\nimport { Consumer } from '../../Context';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport { BASE_URL } from '../../Config';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default class Register extends Component {\r\n\r\n\r\n  state = {\r\n      email: \"\",\r\n      username: \"\",\r\n      userType:\"\",\r\n      matric: \"\",\r\n      password: \"\",\r\n      registerationFailed: false,\r\n      isRegistered: false,\r\n      errors: {}\r\n  }\r\n\r\n  redirect = () => {\r\n    if(this.state.isRegistered){\r\n        return (<Redirect to = \"/login\" />)\r\n    }\r\n  }\r\n\r\n  onChangeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value})\r\n  }\r\n\r\n  clearAlert = () => {\r\n    setTimeout(()=>{\r\n        this.setState({\r\n            registerationFailed: false\r\n        })\r\n    },5000)\r\n  }\r\n\r\n  postUser = async (user,bodyMessage) => {\r\n\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/${user}`, bodyMessage)\r\n        \r\n        this.setState({isRegistered: true})\r\n    } catch (error) {\r\n        this.setState({ registerationFailed: true })\r\n        this.clearAlert();\r\n    }\r\n    \r\n }\r\n\r\n  onSubmitHandler = (dispatch,e) => {\r\n\r\n    e.preventDefault();\r\n    \r\n    const { username, matric, email, password, userType } = this.state;\r\n\r\n    \r\n    //check for empty fields\r\n\r\n    if(userType === ''){\r\n        \r\n        this.setState({\r\n            errors: {\r\n                userType: \"UserType is required!!!\"\r\n            }\r\n        })\r\n        \r\n        return;\r\n    }\r\n\r\n    if(password === ''){\r\n        this.setState({\r\n            errors: {\r\n                password: \"Password is required!!!\"\r\n            }\r\n        })\r\n        \r\n        return;\r\n    }\r\n\r\n    if(username === '' && userType === \"1\"){\r\n        this.setState({\r\n            errors: {\r\n                username: \"Username is required!!!\"\r\n            }\r\n        })\r\n        \r\n        return;\r\n    }\r\n\r\n\r\n    if(matric === ''){\r\n        this.setState({\r\n            errors: {\r\n                matric: \"Matric Number is required!!!\"\r\n            }\r\n        })\r\n        return;\r\n    } \r\n\r\n    if(email === ''){\r\n        this.setState({\r\n            errors: {\r\n                email: \"Email is required!!!\"\r\n            }\r\n        })\r\n        return;\r\n    }\r\n\r\n    //check for the user type\r\n    \r\n    let user;\r\n    let bodyMessage;\r\n\r\n    if(userType === \"1\"){\r\n        user = \"lecturers\"\r\n        bodyMessage = {\r\n            email,\r\n            password,\r\n            username\r\n        }\r\n    }else{\r\n        user = \"students\"\r\n        bodyMessage = {\r\n            email,\r\n            password,\r\n            matricNumber: matric\r\n        }\r\n    }\r\n\r\n    this.postUser(user, bodyMessage)\r\n\r\n\r\n    //clear state\r\n    this.setState({\r\n        id: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        matric: \"\",\r\n        userType: \"\",\r\n        password: \"\",\r\n        error: {}\r\n    });\r\n    \r\n}\r\n  render() {\r\n    \r\n    const { email, username, matric, userType, password, errors } = this.state; \r\n    \r\n    \r\n    return (\r\n          \r\n        <Consumer>\r\n            \r\n            {\r\n                ( value ) => {\r\n\r\n                    const { dispatch } = { value }\r\n                    \r\n                    return (\r\n                        <>\r\n                          {this.redirect()}  \r\n                          <Header branding = \"ibeHear\" />\r\n                              <div className = \"container col-md-6 text-white\">\r\n                                  {\r\n                                      this.state.registerationFailed &&\r\n                                      (\r\n                                        <div \r\n                                        className = \"p-1 text-center bg-danger\"><strong>Registration Failed</strong></div>\r\n                                      )\r\n                                  }\r\n                                  \r\n                                  <form onSubmit = {this.onSubmitHandler.bind(this,dispatch)}>\r\n                                      <p \r\n                                          className = \"text-center\"\r\n                                          style = {{ borderBottom: \"2px dotted #f3f3f3\", color: \"white\", padding: \"10px\" }}\r\n                                          >Register</p>\r\n                                      <select \r\n                                        onChange = {this.onChangeHandler}\r\n                                        name = \"userType\"\r\n                                        className=\"custom-select\" id=\"inputGroupSelect01\">\r\n                                          <option value=\"1\">Lecturer</option>\r\n                                          <option  defaultValue=\"2\">Student</option>\r\n                                      </select>\r\n                                       <br /><br />\r\n                                      <TextInputGroup \r\n                                          name = \"email\"\r\n                                          type = \"email\"\r\n                                          placeholder = \"example@gmail.com\"\r\n                                          label = \"Email Address: \"\r\n                                          value = {email}\r\n                                          onChange = {this.onChangeHandler}\r\n                                          error = {errors.email}\r\n                                      />\r\n                                      { userType === \"1\" || userType === '' ? (\r\n                                          <TextInputGroup \r\n                                          name = \"username\"\r\n                                          placeholder = \"username\"\r\n                                          label = \"Username: \"\r\n                                          value = {username}\r\n                                          onChange = {this.onChangeHandler}\r\n                                          error = {errors.username}\r\n                                      />\r\n                                      ): (\r\n                                            <TextInputGroup \r\n                                                name = \"matric\"\r\n                                                placeholder = \"matric number\"\r\n                                                label = \"Matric Number: \"\r\n                                                value = {matric}\r\n                                                onChange = {this.onChangeHandler}\r\n                                                error = {errors.matric}\r\n                                            />\r\n                                      )}\r\n                                      <TextInputGroup \r\n                                          name = \"password\"\r\n                                          placeholder = \"secured password\"\r\n                                          type = \"password\"\r\n                                          label = \"Password \"\r\n                                          value = {password}\r\n                                          onChange = {this.onChangeHandler}\r\n                                          error = {errors.password}\r\n                                      />\r\n                                        \r\n                  \r\n                                          <div className=\"text-center container\">\r\n                                              <button \r\n                                                  \r\n                                                  style = {{ background: \"red\", opacity: \"0.7\" }}\r\n                                                  type = \"submit\"\r\n                                                  className=\"btn btn-lg text-white\">Register</button></div>\r\n                  \r\n                                          <hr className=\"my-4\"/>\r\n                                          \r\n                                  </form>\r\n                                  <button \r\n                                        style = {{ background: \"red\", opacity: \"0.7\" }} className=\"btn btn-danger btn-lg btn-google btn-block text-uppercase\"><i className=\"fab fa-google mr-2\"></i> Sign up\r\n                                    </button>\r\n                                    <div className = \"text-center mt-3\">\r\n                                        <Link to = \"/register\">\r\n                                            <i className = \"text-white\">\r\n                                                Already have an account?\r\n                                            </i>\r\n                                        </Link>\r\n                                    </div>\r\n                              </div>\r\n                            \r\n                          <Footer />\r\n                        </>\r\n                      )\r\n                }\r\n            }\r\n        </Consumer>\r\n    )\r\n\r\n    \r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./Login.css\"\r\nimport Header from \"../layouts/Header\"\r\nimport Footer from \"../layouts/Footer\"\r\nimport TextInputGroup from \"../layouts/TextInputGroup\"\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from 'axios'\r\nimport { BASE_URL } from '../../Config'\r\nimport { Consumer } from '../../Context';\r\n\r\nexport default class Login extends Component {\r\n\r\n  state = {\r\n      email: \"\",\r\n      userType: \"\",\r\n      password: \"\",\r\n      loginFailed: false,\r\n      errors: {},\r\n      errorMessage: \"\",\r\n      data: {}\r\n  }\r\n\r\n  onChangeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value} )\r\n  }\r\n\r\n  \r\n  clearAlert = () => {\r\n    setTimeout(()=>{\r\n        this.setState({\r\n            registerationFailed: false\r\n        })\r\n    },5000)\r\n  }\r\n\r\n  login = async (user,bodyMessage, dispatch) => {\r\n\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/login/${user}`, bodyMessage)\r\n        this.setState({ loginFailed: false, data: res.data })\r\n        const { userType } = this.state;\r\n        const action = { type: \"LOGIN_USER\", payload: { data: res.data, userType } }\r\n        dispatch(action)\r\n\r\n    } catch (e) {\r\n        this.setState({ loginFailed: true, errorMessage: \"Invalid Credentials\" })\r\n        this.clearAlert();\r\n    }    \r\n}\r\n\r\n  onSubmitHandler = (dispatch,e) => {\r\n    e.preventDefault();\r\n    const { id, userType, email, password } = this.state;\r\n    \r\n    //check for empty fields\r\n\r\n    if(userType === ''){\r\n        this.setState({\r\n            errors: {\r\n                userType: \"User type is required!!!\"\r\n            }\r\n        })\r\n        \r\n        return;\r\n    }\r\n\r\n    if(password === ''){\r\n        this.setState({\r\n            errors: {\r\n                password: \"Password is required!!!\"\r\n            }\r\n        })\r\n        \r\n        return;\r\n    }\r\n\r\n    if(email === ''){\r\n        this.setState({\r\n            errors: {\r\n                email: \"Email is required!!!\"\r\n            }\r\n        })\r\n        return;\r\n    }\r\n\r\n    let user;\r\n\r\n    if(userType === \"1\"){\r\n        user = \"Lecturer\"\r\n    }else{\r\n        user = \"Student\"\r\n    }\r\n\r\n    this.login(user,{ email, password }, dispatch)\r\n    \r\n\r\n    //clear state\r\n    this.setState({\r\n        id: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        userType: \"\",\r\n        error: {}\r\n    });\r\n    \r\n}\r\n  render() {\r\n    const { email, password, errors } = this.state; \r\n\r\n    return (\r\n        <Consumer>\r\n            {\r\n                (value) => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <>\r\n                            <Header branding = \"ibeHear\" />\r\n                                <div className = \"container col-md-6 text-white\">\r\n                                {\r\n                                      this.state.loginFailed &&\r\n                                      (\r\n                                        <div \r\n                                        className = \"p-1 text-center bg-danger\"><strong>{this.state.errorMessage}</strong></div>\r\n                                      )\r\n                                  }\r\n                                    <form onSubmit = {this.onSubmitHandler.bind(this,dispatch)}>\r\n                                        <p \r\n                                            className = \"text-center\"\r\n                                            style = {{ borderBottom: \"2px dotted #f3f3f3\", color: \"white\", padding: \"10px\" }}\r\n                                            >Login</p>\r\n                                        \r\n                                        <select \r\n                                            onChange = {this.onChangeHandler}\r\n                                            name = \"userType\"\r\n                                            className=\"custom-select\" id=\"inputGroupSelect01\">\r\n                                                <option value=\"2\">Lecturer</option>\r\n                                                <option  defaultValue=\"3\">Student</option>\r\n                                        </select>\r\n                                        <br /><br />\r\n                                        <TextInputGroup \r\n                                            name = \"email\"\r\n                                            placeholder = \"example@gmail.com\"\r\n                                            type = \"email\"\r\n                                            label = \"Email Address: \"\r\n                                            value = {email}\r\n                                            onChange = {this.onChangeHandler}\r\n                                            error = {errors.email}\r\n                                        />\r\n                                        \r\n                                        <TextInputGroup \r\n                                            name = \"password\"\r\n                                            placeholder = \"secured password\"\r\n                                            type = \"password\"\r\n                                            label = \"Password \"\r\n                                            value = {password}\r\n                                            onChange = {this.onChangeHandler}\r\n                                            error = {errors.password}\r\n                                        />\r\n                                        \r\n\r\n                                            <div className=\"text-center container\">\r\n                                                <button\r\n                                                    \r\n                                                    style = {{ background: \"red\", opacity: \"0.7\" }}\r\n                                                    className=\"btn btn-lg text-white\" type=\"submit\">Login</button></div>\r\n\r\n                                            <hr className=\"my-4\"/>\r\n                                            \r\n                                    </form>\r\n                                    <button style = {{ background: \"red\", opacity: \"0.7\" }} className=\"btn btn-danger btn-lg btn-google btn-block text-uppercase\" type=\"submit\"><i className=\"fab fa-google mr-2\"></i> Sign in</button>\r\n\r\n                                            <div className = \"text-center mt-3\">\r\n                                                <Link to = \"/register\">\r\n                                                    <i className = \"text-white\">\r\n                                                        Don't have an account?\r\n                                                    </i>\r\n                                                </Link>\r\n                                            </div>\r\n                                </div>\r\n                            \r\n                            <Footer />\r\n                        </>\r\n                    )\r\n                }\r\n            }\r\n        </Consumer>\r\n      \r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst LoggedInHeader = (props) => {\r\n  \r\n  const { branding, username } = props;\r\n\r\n\r\n  return (\r\n\t<nav \r\n\t\tclassName=\"app-navbar navbar navbar-expand-lg navbar-dark static-top mb-5 shadow\">\r\n\t\t<div className=\"container app-container\">\r\n\t\t\t<a className=\"navbar-brand\" href=\"#\">\r\n\t\t\t\t\r\n\t\t\t\t<span className = \"v-logo\">V</span> \r\n\t\t\t\t{branding}\r\n\t\t\t\t\r\n\t\t\t\t</a>\r\n\r\n\t\t\t\t\r\n\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t</button>\r\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n\t\t\t<ul className=\"navbar-nav ml-auto\">\r\n\t\t\t\t<li className=\"nav-item active\">\r\n                    <Link to = \"/home\"><a className=\"nav-link\" href=\"#\">Home\r\n                        <span className=\"sr-only\">(current)</span>\r\n                    </a>\r\n                    </Link>\r\n\t\t\t\t</li>\r\n                <li style = {{ background: \"#910A09\", opacity: \"0.7\" }} className=\"nav-item\">\r\n                    <Link to = \"/home\"><a className=\"nav-link\" href=\"#\">Welcome! {username}\r\n                        <span className=\"sr-only\">(current)</span>\r\n                    </a>\r\n                    </Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n</nav>\r\n\r\n  )\r\n}\r\n\r\nLoggedInHeader.defaultProps = {\r\n\tbranding: \"My App\"\r\n}\r\n\r\nLoggedInHeader.propTypes = {\r\n\tbranding: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default LoggedInHeader;","import React, { Component } from \"react\"; \r\nimport LoggedInHeader from \"../layouts/LoggedInHeader\"\r\nimport Footer from \"../layouts/Footer\"\r\nimport \"./Microphone.css\"\r\n\r\nclass Microphone extends Component {\r\n  render() {\r\n    return (\r\n        <>\r\n            <LoggedInHeader branding = \"ibeHear\" username = \"teecode\"/>\r\n            <div className = \"m-container container text-center m-auto text-white\">\r\n                <span className = \"icon fa fa-microphone\"></span>\r\n                <br/>\r\n                <strong>Click to start talking</strong>\r\n            </div>\r\n            <Footer />\r\n            \r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Microphone;","import React from 'react';\r\nimport './LeftSideBar.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function LeftSideBar(props) {\r\n\r\n  let isClicked = false\r\n  \r\n  const handleToggle = () => {\r\n      isClicked = !isClicked\r\n      if(isClicked){\r\n        window.document.getElementById('wrapper').className = \"d-flex toggled\"\r\n      }else{\r\n        window.document.getElementById('wrapper').className = \"d-flex\"\r\n      }\r\n      \r\n  }\r\n\r\n  \r\n  return (\r\n    <>yy\r\n        <div className=\"app-dashboard\" id=\"sidebar-wrapper\">\r\n            <div className=\"sidebar-heading\">  {props.name} Dashboard \r\n                <span onClick = {handleToggle} className = \"fa ml-2 fa-bars\"></span>\r\n            </div>\r\n                <div className=\"list-group list-group-flush\">\r\n                    { props.data.map((each) => {\r\n                        return (\r\n                            <a href= {`/${each.page}`} className=\"list-group-item list-group-item-action \"><span className = \"fa fa-cogs mr-2 \"></span>{each.name}</a>\r\n                        )\r\n                    })}\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n            <div onClick = {handleToggle} className = \"full-page text-center\"><span className = \"fa fa-arrow-right\"></span></div>\r\n                \r\n           \r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\"; \r\nimport LeftSideBar from \"../layouts/LeftSideBar\";\r\nimport './AdminDashboard.css'\r\nimport LoggedInHeader from \"../layouts/LoggedInHeader\";\r\n\r\nclass AdminDashboard extends Component {\r\n \r\n\r\n  render() {\r\n      const data = [{\r\n          name: \"Manage Admins\",\r\n          page: \"manageadmin\"\r\n      },\r\n      {\r\n        name: \"Manage Students\",\r\n        page: \"managestudent\"\r\n    },{\r\n        name: \"Manage Lecturers\",\r\n        page: \"managelecturer\"\r\n    },{\r\n        name: \"Manage Courses\",\r\n        page: \"managecourse\"\r\n    },{\r\n        name: \"Manage Admins\",\r\n        page: \"manageadmin\"\r\n    },{\r\n        name: \"Manage Lectures\",\r\n        page: \"managematerial\"\r\n    },{\r\n        name: \"Manage Notifications\",\r\n        page: \"managenotification\"\r\n    }]\r\n    return (\r\n     <>\r\n     <div className=\"d-flex\" id=\"wrapper\">\r\n        <LeftSideBar name = \"Admin\" data = {data}/>\r\n        <div id=\"page-content-wrapper\">\r\n            \r\n            <LoggedInHeader branding = \"ibeHear\" username = \"teecode\" />\r\n\r\n            <div className=\"container-fluid\">\r\n            \r\n            </div>\r\n        </div> \r\n    </div>\r\n     </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminDashboard;","import React, { Component } from \"react\"; \r\nimport LeftSideBar from \"../layouts/LeftSideBar\";\r\nimport './AdminDashboard.css'\r\nimport LoggedInHeader from \"../layouts/LoggedInHeader\";\r\n\r\nclass StudentDashboard extends Component {\r\n \r\n\r\n  render() {\r\n      const data = [{\r\n          name: \"Manage Courses\",\r\n          page: \"managecourse\"\r\n    },{\r\n        name: \"Manage Lectures\",\r\n        page: \"managematerial\"\r\n    },{\r\n        name: \"Manage Notifications\",\r\n        page: \"managenotification\"\r\n    },{\r\n        name: \"Profile\",\r\n        page: \"studentprofile\"\r\n    }]\r\n    return (\r\n     <>\r\n     <div className=\"d-flex\" id=\"wrapper\">\r\n        <LeftSideBar name = \"Student\" data = {data}/>\r\n        <div id=\"page-content-wrapper\">\r\n            \r\n            <LoggedInHeader branding = \"ibeHear\" username = \"teecode\" />\r\n\r\n            <div className=\"container-fluid\">\r\n            \r\n            </div>\r\n        </div> \r\n    </div>\r\n     </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentDashboard;","import React, { Component } from \"react\"; \r\nimport LeftSideBar from \"../layouts/LeftSideBar\";\r\nimport './AdminDashboard.css'\r\nimport LoggedInHeader from \"../layouts/LoggedInHeader\";\r\n\r\nclass LecturerDashboard extends Component {\r\n \r\n\r\n  render() {\r\n      const data = [\r\n      {\r\n        name: \"Manage Students\",\r\n        page: \"managestudent\"\r\n    },{\r\n        name: \"Manage Courses\",\r\n        page: \"managecourse\"\r\n    },{\r\n        name: \"Manage Lectures\",\r\n        page: \"managelecture\"\r\n    },{\r\n        name: \"Manage Notifications\",\r\n        page: \"managenotification\"\r\n    },{\r\n        name: \"Profile\",\r\n        page: \"lecturerprofile\"\r\n    }]\r\n    return (\r\n     <>\r\n     <div className=\"d-flex\" id=\"wrapper\">\r\n        <LeftSideBar name = \"Lecturer\" data = {data}/>\r\n        <div id=\"page-content-wrapper\">\r\n            \r\n            <LoggedInHeader branding = \"ibeHear\" username = \"teecode\" />\r\n\r\n            <div className=\"container-fluid\">\r\n            \r\n            </div>\r\n        </div> \r\n    </div>\r\n     </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LecturerDashboard;","import React, { Component } from \"react\"; \r\nimport LoggedInHeader from \"../layouts/LoggedInHeader\"\r\nimport Footer from \"../layouts/Footer\"\r\nimport \"./Message.css\"\r\n\r\nclass Messages extends Component {\r\n  render() {\r\n    return (\r\n        <>\r\n            <LoggedInHeader branding = \"ibeHear\" username = \"teecode\"/>\r\n            <div className = \"container text-center m-auto text-white\">\r\n                \r\n            </div>\r\n            <Footer />\r\n            \r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Messages;","import React from \"react\"\r\nimport {Switch,Route} from \"react-router-dom\"\r\nimport IndexPage from \"./components/IndexPage\"\r\nimport Register from \"./components/Register/Register\"\r\nimport Login from \"./components/Login/Login\" \r\nimport Microphone from \"./components/Microphone/Microphone\"\r\nimport AdminDashboard from \"./components/Dashboard/AdminDashboard\";\r\nimport StudentDashboard from \"./components/Dashboard/StudentDashboard\";\r\nimport LecturerDashboard from \"./components/Dashboard/LecturerDashboard\";\r\nimport Messages from \"./components/Message/Messages\";\r\n\r\nconst Main = ()=>{\r\n\r\n\treturn(\r\n\t\t<Switch>\r\n\r\n\t\t\t<Route exact path = \"/\" component = {IndexPage} />\r\n            <Route exact path = \"/home\" component = {IndexPage} />\r\n            <Route exact path = \"/register\" component = {Register} />\r\n            <Route exact path = \"/login\" component = {Login} />\r\n            <Route exact path = '/talk' component = {Microphone} />\r\n            <Route exact path = '/admin' component = {AdminDashboard} />\r\n            <Route exact path = '/student' component = {StudentDashboard} />\r\n            <Route exact path = '/lecturer' component = {LecturerDashboard} />\r\n            <Route exact path = '/lecture' component = {Messages} />\r\n            \r\n\r\n\t\t</Switch>\r\n\t)\r\n\t\r\n\r\n\r\n}\r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\nimport { Provider } from \"./Context\";\nimport './App.css';\nimport { Redirect } from \"react-router-dom\"\nimport Main from \"./Main\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport 'jquery/dist/jquery'\nimport 'popper.js/dist/popper'\nimport 'bootstrap/dist/js/bootstrap'\n\n\n\nclass App extends Component {\n  state = {\n    isAuthenticated: false\n  }\n\n  isAuthenticated = () => {\n    if(localStorage.getItem('s-token') || localStorage.getItem('l-token')){\n      alert('hhfslsdfkl')\n        console.log('hereeee')\n        this.setState({ isAuthenticated: true })\n    }else{\n        this.setState({ isAuthenticated: false })\n        console.log('hereeee111111111111')\n    }\n}\n\n  render() {\n    if(this.state.isAuthenticated){\n      return(<Redirect to = \"/login\" />)\n    }  \n    return (\n      <Provider>\n        <div className = \"wrapper\"></div>\n        <Main />\n      </Provider>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\"\n\nReactDOM.render(\n<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}